# .gitlab-ci.yml

image: rust:latest

# 定义全局变量，用于优化 Cargo 并便于缓存
variables:
  CARGO_HOME: "$CI_PROJECT_DIR/.cargo"
  CARGO_NET_GIT_FETCH_WITH_CLI: "true"

# 定义流水线的各个阶段（已移除 release）
stages:
  - build
  - test

# 定义全局缓存策略，加速后续构建
# 这将缓存 .cargo/ 和 target/ 目录，以 Cargo.lock 为键
cache:
  key:
    files:
      - Cargo.lock
  paths:
    - .cargo/
    - target/
  # 默认策略：拉取缓存，并在作业成功后推送更新
  policy: pull-push

# --- 构建作业 ---
# 这个作业会在每次提交时运行
build_job:
  stage: build
  script:
    - cargo build --verbose

# --- 测试作业 ---
# 这个作业会在构建成功后运行
test_job:
  stage: test
  script:
    # Cargo 会自动利用缓存，跳过不必要的重新编译
    - cargo test --verbose
  cache:
    # 测试作业只需要拉取缓存，无需再次上传，可以提高效率
    policy: pull